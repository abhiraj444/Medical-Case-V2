// convert-fonts.js

const fs = require('fs');
const path = require('path');

// Define the fonts you want to convert
// IMPORTANT: Adjust the 'path' property to the actual location of your .ttf files.
// The 'outputName' will be used for the generated TypeScript file and the variable name.
// The 'jsPDFStyle' is how jsPDF recognizes the font variant (e.g., 'normal', 'bold', 'italic').
const fontConfigs = [
    {
        name: 'NotoSans-Regular',
        path: './public/fonts/NotoSans-Regular.ttf', // <--- ADJUST THIS PATH
        jsPDFStyle: 'normal'
    },
    {
        name: 'NotoSans-Bold',
        path: './public/fonts/NotoSans-Bold.ttf', // <--- ADJUST THIS PATH
        jsPDFStyle: 'bold'
    },
    {
        name: 'NotoSans-Italic',
        path: './public/fonts/NotoSans-Italic.ttf', // <--- ADJUST THIS PATH
        jsPDFStyle: 'italic'
    },
    // Add more font configurations here if you have other fonts (e.g., NotoSans-Light.ttf)
];

// Define the output directory for the generated Base64 font files
// This path is relative to the project root where this script is run.
const outputDir = path.join(__dirname, 'src', 'lib', 'pdf-fonts'); // Recommended output location

// Create the output directory if it doesn't exist
if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
    console.log(`Created output directory: ${outputDir}`);
}

console.log('Starting font conversion...');

fontConfigs.forEach(font => {
    const fontFilePath = path.resolve(font.path);
    const outputFileName = `${font.name.replace(/-/g, '')}.ts`; // e.g., NotoSansRegular.ts
    const outputFilePath = path.join(outputDir, outputFileName);
    const variableName = `${font.name.replace(/-/g, '')}Base64`; // e.g., NotoSansRegularBase64

    try {
        // Read the TTF file as a Buffer and convert to Base64
        const fontBuffer = fs.readFileSync(fontFilePath);
        const fontBase64 = fontBuffer.toString('base64');

        // Generate the TypeScript content for the font
        const tsContent = `
// This file was automatically generated by convert-fonts.js
// Font: ${font.name}.ttf
// jsPDF Style: ${font.jsPDFStyle}

export const ${variableName} = '${fontBase64}';

// Helper function to register this font with jsPDF
// You can call this function in your component where jsPDF is used.
export function register${font.name.replace(/-/g, '')}(doc: any) {
    doc.addFileToVFS('${font.name}.ttf', ${variableName});
    doc.addFont('${font.name}.ttf', 'NotoSans', '${font.jsPDFStyle}');
}
`;
        // Write the content to the output .ts file
        fs.writeFileSync(outputFilePath, tsContent);
        console.log(`✅ Converted "${font.name}.ttf" and saved to "${outputFilePath}"`);

    } catch (error) {
        console.error(`❌ Error converting "${font.name}.ttf":`, error.message);
        console.error(`   Please ensure the path "${font.path}" is correct and the file exists.`);
    }
});

console.log('Font conversion process finished.');